<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>{{ page.title }}</title>


		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="{{ site.slides_lib }}/reveal.js/css/reveal.css">
		<!--<link rel="stylesheet" href="{{ site.slides_lib }}/reveal.js/css/theme/black.css" id="theme">-->
		<link rel="stylesheet" href="../../resources/css/slides.css" id="theme">

		<!-- For syntax highlighting -->
		<link rel="stylesheet" href="{{ site.slides_lib }}/reveal.js/lib/css/zenburn.css">

		<script>
			if( window.location.search.match( /print-pdf/gi ) ) {
				var link = document.createElement( 'link' );
				link.rel = 'stylesheet';
				link.type = 'text/css';
				link.href = '../../resources/css/pdf.css';
				document.getElementsByTagName( 'head' )[0].appendChild( link );
				document.addEventListener('DOMContentLoaded', function() {
					console.log("loaded");
					[].forEach.call(document.getElementsByTagName("section"), function(el) {
						el.setAttribute("style", "");
						el.classList.remove('future');
					});
					document.querySelector('div.reveal').removeChild(document.querySelector('.backgrounds'));
				});
			} else {
				document.addEventListener('DOMContentLoaded', function() {
					var printLink = document.createElement('a'),
						controls = document.querySelector('.controls')
					printLink.href = "?print-pdf";
					printLink.textContent = 'print version';
					printLink.style.display = "block";
					printLink.style.top = "92px";
					printLink.style.fontSize = "0.5em";
					controls.style.textAlign = 'center';
					controls.appendChild(printLink);
				});
			}
/*
			document.addEventListener('DOMContentLoaded', function() {
				var divs = document.querySelectorAll('div[data-editable]');
				Array.prototype.forEach.call(divs, function(div) {
					var editor = ace.edit(div);
					editor.setTheme("ace/theme/monokai");
					editor.getSession().setMode("ace/mode/python");
				});
			});
*/
		</script>
		<style>
div[data-editable] {
		position: relative;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
}
		</style>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">
			<div class="slides">
					{{ content }}
			</div>

<!--		</div>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.3/ace.js" type="text/javascript" charset="utf-8"></script>


		<script src="{{ site.slides_lib }}/reveal.js/lib/js/head.min.js"></script>
		<script src="{{ site.slides_lib }}/reveal.js/js/reveal.min.js"></script>

		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: false,

				theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'page', // default/cube/page/concave/zoom/linear/fade/none

				// Parallax scrolling
				// parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
				// parallaxBackgroundSize: '2100px 900px',

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: '{{ site.slides_lib }}/reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: '{{ site.slides_lib }}/reveal.js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlighting(); hljs.configure({languages: ['js', 'html', 'py', 'python']});} },
					{ src: '{{ site.slides_lib }}/reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: '{{ site.slides_lib }}/reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});

		</script>

-->
	</body>
</html>
